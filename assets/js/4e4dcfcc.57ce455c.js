"use strict";(globalThis.webpackChunkgo_faster_docs=globalThis.webpackChunkgo_faster_docs||[]).push([[712],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(b,i(i({ref:t},u),{},{components:n})):a.createElement(b,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7988:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>T,frontMatter:()=>v,metadata:()=>h,toc:()=>x});var a=n(7462),r=n(7294),l=n(3905),i=n(6010),o=n(2389),s=n(7392),c=n(7094),u=n(2466);const p="tabList__CuJ",d="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:l,values:o,groupId:m,className:b}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=o??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,s.l)(k,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===l?l:l??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:y}=(0,c.U)(),[x,N]=(0,r.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.o5)();if(null!=m){const e=h[m];null!=e&&e!==x&&k.some((t=>t.value===e))&&N(e)}const O=e=>{const t=e.currentTarget,n=T.indexOf(t),a=k[n].value;a!==x&&(w(t),N(a),null!=m&&y(m,String(a)))},E=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},b)},k.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>T.push(e),onKeyDown:E,onFocus:O,onClick:O},l,{className:(0,i.Z)("tabs__item",d,l?.className,{"tabs__item--active":x===t})}),n??t)}))),t?(0,r.cloneElement)(f.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function b(e){const t=(0,o.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}const f="tabItem_Ymn6";function k(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(f,a),hidden:n},t)}const v={sidebar_position:3,id:"wire",title:"Wire protocol"},g=void 0,h={unversionedId:"clickhouse/wire",id:"clickhouse/wire",title:"Wire protocol",description:"This document describes binary protocol for ClickHouse TCP clients.",source:"@site/docs/clickhouse/basics.mdx",sourceDirName:"clickhouse",slug:"/clickhouse/wire",permalink:"/docs/clickhouse/wire",draft:!1,editUrl:"https://github.com/go-faster/web/edit/main/docs/clickhouse/basics.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"wire",title:"Wire protocol"},sidebar:"tutorialSidebar",previous:{title:"CityHash",permalink:"/docs/clickhouse/hash"},next:{title:"Client packets",permalink:"/docs/clickhouse/client"}},y={},x=[{value:"Varint",id:"varint",level:2},{value:"String",id:"string",level:2},{value:"Integers",id:"integers",level:2},{value:"Int32",id:"int32",level:3},{value:"Boolean",id:"boolean",level:2}],N={toc:x};function T(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This document describes binary protocol for ClickHouse TCP clients."),(0,l.kt)("h2",{id:"varint"},"Varint"),(0,l.kt)("p",null,"For lengths, packet codes and other cases the ",(0,l.kt)("em",{parentName:"p"},"unsigned varint")," encoding is used.\nUse ",(0,l.kt)("a",{parentName:"p",href:"https://pkg.go.dev/encoding/binary#PutUvarint"},"binary.PutUvarint")," and ",(0,l.kt)("a",{parentName:"p",href:"https://pkg.go.dev/encoding/binary#ReadUvarint"},"binary.ReadUvarint"),"."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("em",{parentName:"p"},"Signed")," varint is not used.")),(0,l.kt)("h2",{id:"string"},"String"),(0,l.kt)("p",null,"Variable length strings are encoded as ",(0,l.kt)("em",{parentName:"p"},"(length, value)"),", where ",(0,l.kt)("em",{parentName:"p"},"length")," is ",(0,l.kt)("a",{parentName:"p",href:"#varint"},"varint")," and ",(0,l.kt)("em",{parentName:"p"},"value")," is utf8 string."),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Validate length to prevent OOM:"),(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"0 \u2264 len < MAX"))),(0,l.kt)(b,{mdxType:"Tabs"},(0,l.kt)(k,{value:"encode",label:"Encode",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'s := "Hello, world!"\n\n// Writing string length as uvarint.\nbuf := make([]byte, binary.MaxVarintLen64)\nn := binary.PutUvarint(buf, uint64(len(s)))\nbuf = buf[:n]\n\n// Writing string value.\nbuf = append(buf, s...)\n'))),(0,l.kt)(k,{value:"decode",label:"Decode",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'r := bytes.NewReader([]byte{\n    0xd, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c,\n    0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21,\n})\n\n// Read length.\nn, err := binary.ReadUvarint(r)\nif err != nil {\n    panic(err)\n}\n\n// Check n to prevent OOM or runtime exception in make().\nconst maxSize = 1024 * 1024 * 10 // 10 MB\nif n > maxSize || n < 0 {\n    panic("invalid n")\n}\n\nbuf := make([]byte, n)\nif _, err := io.ReadFull(r, buf); err != nil {\n    panic(err)\n}\n\nfmt.Println(string(buf))\n// Hello, world!\n')))),(0,l.kt)(b,{mdxType:"Tabs"},(0,l.kt)(k,{value:"hexdump",label:"Hex dump",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hexdump"},"00000000  0d 48 65 6c 6c 6f 2c 20  77 6f 72 6c 64 21        |.Hello, world!|\n"))),(0,l.kt)(k,{value:"base64",label:"Base64",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"DUhlbGxvLCB3b3JsZCE\n"))),(0,l.kt)(k,{value:"go",label:"Go",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"data := []byte{\n    0xd, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c,\n    0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21,\n}\n")))),(0,l.kt)("h2",{id:"integers"},"Integers"),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"ClickHouse uses ",(0,l.kt)("strong",{parentName:"p"},"Little Endian")," for fixed size integers.")),(0,l.kt)("h3",{id:"int32"},"Int32"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"v := int32(1000)\n\n// Encode.\nbuf := make([]byte, 8)\nbinary.LittleEndian.PutUint32(buf, uint32(v))\n\n// Decode.\nd := int32(binary.LittleEndian.Uint32(buf))\nfmt.Println(d) // 1000\n")),(0,l.kt)(b,{mdxType:"Tabs"},(0,l.kt)(k,{value:"hexdump",label:"Hex dump",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-hexdump"},"00000000  e8 03 00 00 00 00 00 00                           |........|\n"))),(0,l.kt)(k,{value:"base64",label:"Base64",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"6AMAAAAAAAA\n")))),(0,l.kt)("h2",{id:"boolean"},"Boolean"),(0,l.kt)("p",null,"Booleans are represented by single byte, ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."))}T.isMDXComponent=!0}}]);